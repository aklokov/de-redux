@import { ChildReducer, ReducerFile } from '../../../derive/model';
@exportname childReducerGenerator
@parameters child: ChildReducer, reducer: ReducerFile

function @(child.fieldName)Call(prev: @reducer.stateName, action: { type: string }): @reducer.stateName {
  return {
    ...prev,
    @(child.fieldName): @(child.stateName)Reducer(prev.@child.fieldName, action)
  };
}
@eol
for (let action of @(child.stateName)Reduceable) {
  const existing = map[action];
  if (existing) {
    map[action] = (prev, action) => @(child.fieldName)Call(existing(prev, action), action);
  } else {
    map[action] = @(child.fieldName)Call;
  }
}
